/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Senkins.view.MyViewport', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.myviewport',

    requires: [
        'Senkins.view.MyViewportViewModel',
        'Ext.grid.Panel',
        'Ext.grid.column.Date',
        'Ext.view.Table',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.Panel',
        'Ext.toolbar.Spacer',
        'Ext.form.FieldSet',
        'Ext.form.field.TextArea',
        'Ext.form.field.Checkbox'
    ],

    viewModel: {
        type: 'myviewport'
    },
    layout: 'fit',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'panel',
            height: 250,
            width: 400,
            title: 'Senkins',
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    itemId: 'jobGrid',
                    title: '',
                    bind: {
                        store: '{JobStore}'
                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'string',
                            text: 'Job Name'
                        },
                        {
                            xtype: 'datecolumn',
                            dataIndex: 'number',
                            text: 'Last Run'
                        },
                        {
                            xtype: 'datecolumn',
                            dataIndex: 'date',
                            text: 'Last Error'
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    text: '<i class="fa fa-plus-circle"></i> Add New Job',
                                    listeners: {
                                        click: 'onButtonClick1'
                                    }
                                },
                                {
                                    xtype: 'button',
                                    text: '<i class="fa fa-wrench"></i> Settings',
                                    listeners: {
                                        click: 'onButtonClick3'
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'form',
                    flex: 1,
                    itemId: 'jobPanel',
                    bodyPadding: 10,
                    title: 'Editing Job [INSRT JOB HERE]',
                    items: [
                        {
                            xtype: 'container',
                            margin: '10 0 10 0',
                            layout: {
                                type: 'hbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'container',
                                    flex: 1
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'executeJobBtn',
                                    scale: 'large',
                                    text: 'Execute Job Now'
                                },
                                {
                                    xtype: 'container',
                                    flex: 1
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            layout: 'form',
                            title: 'Description',
                            items: [
                                {
                                    xtype: 'textfield',
                                    fieldLabel: 'Name',
                                    name: 'name'
                                },
                                {
                                    xtype: 'textareafield',
                                    fieldLabel: 'Description',
                                    name: 'description'
                                },
                                {
                                    xtype: 'textareafield',
                                    fieldLabel: 'Exec',
                                    name: 'exec'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            layout: 'form',
                            title: 'Cron',
                            items: [
                                {
                                    xtype: 'checkboxfield',
                                    fieldLabel: 'Scheduled Job',
                                    name: 'useCron',
                                    boxLabel: ''
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: 'Cron Schedule',
                                    name: 'cron'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            layout: 'form',
                            title: 'Email',
                            items: [
                                {
                                    xtype: 'checkboxfield',
                                    fieldLabel: 'Use Default',
                                    name: 'useDefaultEmail',
                                    boxLabel: '',
                                    checked: true
                                },
                                {
                                    xtype: 'textfield',
                                    fieldLabel: 'Email',
                                    name: 'email'
                                }
                            ]
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    text: '<i class="fa fa-floppy-o"></i> Save',
                                    listeners: {
                                        click: 'onButtonClick4'
                                    }
                                },
                                {
                                    xtype: 'button',
                                    text: '<i class="fa fa-ban"></i> Cancel',
                                    listeners: {
                                        click: 'onButtonClick'
                                    }
                                },
                                {
                                    xtype: 'tbspacer',
                                    flex: 1
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'deleteBtn',
                                    text: '<i class="fa fa-trash"></i> Delete'
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'form',
                    flex: 1,
                    itemId: 'settingsPanel',
                    bodyPadding: 10,
                    title: 'Settings',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    text: '<i class="fa fa-floppy-o"></i> Save'
                                },
                                {
                                    xtype: 'tbspacer',
                                    flex: 1
                                },
                                {
                                    xtype: 'button',
                                    text: '<i class="fa fa-ban"></i> Cancel',
                                    listeners: {
                                        click: 'onButtonClick2'
                                    }
                                }
                            ]
                        }
                    ],
                    items: [
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            fieldLabel: 'Default Email'
                        }
                    ]
                }
            ]
        }
    ],
    listeners: {
        render: 'onViewportRender'
    },

    onButtonClick1: function(button, e, eOpts) {
        this.changeState('new');
    },

    onButtonClick3: function(button, e, eOpts) {
        this.changeState('settings');
    },

    onButtonClick4: function(button, e, eOpts) {
        if(this.state == 'new'){
            this.addNewJob();
        }else if (this.state == 'edit'){
            this.editJob();
        }
    },

    onButtonClick: function(button, e, eOpts) {
        this.changeState('init');
    },

    onButtonClick2: function(button, e, eOpts) {
        this.changeState('init');
    },

    onViewportRender: function(component, eOpts) {
        this.changeState("init");
        this.getAllJobs();
    },

    changeState: function(newState) {
        var jobPanel = this.queryById("jobPanel");
        var settingsPanel = this.queryById("settingsPanel");
        var executeJobBtn = this.queryById("executeJobBtn");
        var deleteBtn = this.queryById("deleteBtn");

        switch(newState){
            case 'init':
                jobPanel.hide();
                jobPanel.reset();

                settingsPanel.hide();
                break;
            case 'new':
                jobPanel.setTitle("Create New Job");
                jobPanel.show();

                executeJobBtn.hide();
                deleteBtn.hide();
                break;
            case 'settings':
                settingsPanel.show();
                jobPanel.hide();
                jobPanel.reset();
                break;
        }

        this.state = newState;
    },

    getAllJobs: function() {
        this.mask("Loading Jobs...");

        AERP.Ajax.request({
            url:'getAllJobs',
            success:function(result){
                this.unmask();
                console.log(result);
            },
            failure:function(){
                this.unmask();
            },
            scope:this
        });
    },

    addNewJob: function() {
        var jobPanel = this.queryById("jobPanel");

        this.mask("Adding New Job...");

        AERP.Ajax.request({
            url:'addNewJob',
            params:jobPanel.getValues(false,false,true,true), //[asString], [dirtyOnly], [includeEmptyText], [useDataValues]
            success:function(result){
                this.unmask();
                console.log(result);
            },
            failure:function(){
                this.unmask();
            },
            scope:this
        });
    }

});